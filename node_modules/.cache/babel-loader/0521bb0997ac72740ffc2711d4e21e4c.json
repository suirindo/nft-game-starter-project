{"ast":null,"code":"var _jsxFileName = \"/Users/tomohiro/programing/ETH-NFT-game/nft-game-starter-project/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport twitterLogo from \"./assets/twitter-logo.svg\";\nimport './App.css';\nimport SelectCharacter from \"./Components/SelectCharacter\"; // Constantsを宣言する\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TWITTER_HANDLE = 'coffee_to_hon';\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\n\nconst App = () => {\n  _s();\n\n  // ユーザーのウォレットアドレスを格納するために使用する状態変数を定義する\n  const [currentAccount, setCurrentAccount] = useState(null); // characterNFTとsetCharacterNFTという状態変数を初期化する\n\n  const [characterNFT, setCharacterNFT] = useState(null); // ユーザーがMetaMaskを持っているか確認する\n\n  const checkIfWalletIsConnected = async () => {\n    try {\n      const {\n        ethereum\n      } = window;\n\n      if (!ethereum) {\n        console.log(\"Make sure you have MetaMask!\");\n        return;\n      } else {\n        console.log(\"We have the ethereum object\", ethereum); // acountsにwebサイトを訪れたユーザーのウォレットアカウントを格納する\n        // 複数所有している場合も加味\n\n        const accounts = await ethereum.request({\n          method: \"eth_accounts\"\n        }); // もしアカウントが一つでも存在していたら、以下を実行\n\n        if (accounts.length !== 0) {\n          // accountという変数にユーザーの1つ目のアドレスを格納\n          const account = accounts[0];\n          console.log(\"Found an authorized account:\", account); // currentAccountにユーザーのアカウントアドレスを格納\n\n          setCurrentAccount(account);\n        } else {\n          console.log(\"No authorized account found\");\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }; // レンダリングメソッド\n\n\n  const renderContent = () => {\n    // シナリオ1\n    // ユーザーがwebアプリにログインしていない場合、webアプリ上に、\"Connect Wallet to Get Started\" ボタンを表示する\n    if (!currentAccount) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connect-wallet-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://i.imgur.com/yMocj5x.png\",\n          alt: \"luffy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cta-button connect-wallet-button\",\n          onClick: connectWalletAction,\n          children: \"Connect Wallet to Get Started\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this); // シナリオ2\n      // ユーザーはwebアプリにログインしており、かつNFTキャラクターを持っていない場合、webアプリ上に`SelectCharacter` コンポーネントを表示します。\n    } else if (currentAccount && !characterNFT) {\n      return /*#__PURE__*/_jsxDEV(SelectCharacter, {\n        setCharacterNFT: setCharacterNFT\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 14\n      }, this);\n    }\n  }; // connectWallet メソッドを実装する\n\n\n  const connectWalletAction = async () => {\n    try {\n      const {\n        ethereum\n      } = window;\n\n      if (!ethereum) {\n        alert(\"Get MetaMask!\");\n        return;\n      } // ウォレットアドレスに対してアクセスをリクエストする\n\n\n      const accounts = await ethereum.request({\n        method: \"eth_requestAccounts\"\n      }); // ウォレットアドレスをcurrentAccount に紐づける\n\n      console.log(\"Connected\", accounts[0]);\n      setCurrentAccount(accounts[0]);\n    } catch (error) {\n      console.log(error);\n    }\n  }; // ページがロードされた時に、useEffect()内の関数が呼び出される\n\n\n  useEffect(() => {\n    checkIfWalletIsConnected();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"header gradient-text\",\n          children: \"\\u26A1\\uFE0F METAVERSE GAME \\u26A1\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"sub-text\",\n          children: \"\\u30D7\\u30EC\\u30A4\\u30E4\\u30FC\\u3068\\u5354\\u529B\\u3057\\u3066\\u30DC\\u30B9\\u3092\\u5012\\u305D\\u3046\\u2728\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), renderContent()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"Twitter Logo\",\n          className: \"twitter-logo\",\n          src: twitterLogo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"footer-text\",\n          href: TWITTER_LINK,\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          children: `built with @${TWITTER_HANDLE}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"BVPMSoBTSuVDdYvDNS1j7Fik9vg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","SelectCharacter","TWITTER_HANDLE","TWITTER_LINK","App","currentAccount","setCurrentAccount","characterNFT","setCharacterNFT","checkIfWalletIsConnected","ethereum","window","console","log","accounts","request","method","length","account","error","renderContent","connectWalletAction","alert","twitterLogo"],"sources":["/Users/tomohiro/programing/ETH-NFT-game/nft-game-starter-project/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport twitterLogo from './assets/twitter-logo.svg';\nimport './App.css';\nimport SelectCharacter from \"./Components/SelectCharacter\";\n\n// Constantsを宣言する\nconst TWITTER_HANDLE = 'coffee_to_hon';\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\n\nconst App = () => {\n  // ユーザーのウォレットアドレスを格納するために使用する状態変数を定義する\n  const [currentAccount, setCurrentAccount ] = useState(null);\n  // characterNFTとsetCharacterNFTという状態変数を初期化する\n  const [characterNFT, setCharacterNFT] = useState(null);\n  // ユーザーがMetaMaskを持っているか確認する\n  const checkIfWalletIsConnected = async () => {\n    try {\n      const { ethereum } = window;\n      if (!ethereum) {\n        console.log(\"Make sure you have MetaMask!\");\n        return;\n      } else {\n        console.log(\"We have the ethereum object\", ethereum);\n        // acountsにwebサイトを訪れたユーザーのウォレットアカウントを格納する\n        // 複数所有している場合も加味\n        const accounts = await ethereum.request({ method: \"eth_accounts\" });\n        // もしアカウントが一つでも存在していたら、以下を実行\n        if (accounts.length !== 0){\n          // accountという変数にユーザーの1つ目のアドレスを格納\n          const account = accounts[0];\n          console.log(\"Found an authorized account:\" , account);\n          // currentAccountにユーザーのアカウントアドレスを格納\n          setCurrentAccount(account);\n        } else {\n          console.log(\"No authorized account found\");\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // レンダリングメソッド\n  const renderContent = () => {\n    // シナリオ1\n    // ユーザーがwebアプリにログインしていない場合、webアプリ上に、\"Connect Wallet to Get Started\" ボタンを表示する\n    if (!currentAccount) {\n      return (\n        <div className='connect-wallet-container'>\n          <img src = \"https://i.imgur.com/yMocj5x.png\" alt = \"luffy\" />\n          <button \n          className='cta-button connect-wallet-button'\n          onClick = {connectWalletAction}\n          >\n            Connect Wallet to Get Started\n          </button>\n        </div>\n      );\n     // シナリオ2\n     // ユーザーはwebアプリにログインしており、かつNFTキャラクターを持っていない場合、webアプリ上に`SelectCharacter` コンポーネントを表示します。\n    } else if (currentAccount && !characterNFT) {\n      return <SelectCharacter setCharacterNFT={setCharacterNFT} />;\n    }\n  };\n\n  // connectWallet メソッドを実装する\n  const connectWalletAction = async() => {\n    try {\n      const { ethereum } = window;\n      if (!ethereum) {\n        alert(\"Get MetaMask!\");\n        return;\n      }\n      // ウォレットアドレスに対してアクセスをリクエストする\n      const accounts = await ethereum.request({\n        method: \"eth_requestAccounts\",\n      });\n      // ウォレットアドレスをcurrentAccount に紐づける\n      console.log(\"Connected\", accounts[0]);\n      setCurrentAccount(accounts[0]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // ページがロードされた時に、useEffect()内の関数が呼び出される\n  useEffect(() => {\n    checkIfWalletIsConnected();\n  }, []);\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"header-container\">\n        <p className=\"header gradient-text\">⚡️ METAVERSE GAME ⚡️</p>\n          <p className=\"sub-text\">プレイヤーと協力してボスを倒そう✨</p>\n          {/** renderContent メソッドを呼び出す */}\n          {renderContent()}\n        </div>\n        {/* <div className=\"connect-wallet-container\">\n            <img\n              src=\"https://i.imgur.com/TXBQ4cC.png\"\n              alt=\"LUFFY\"\n            />\n            <button \n              className = \"cta-button connect-wallet-button\"\n              onClick = {connectWalletAction}\n            >\n              Connet Wallet To Get Started\n            </button>\n          </div>\n        </div> */}\n        <div className=\"footer-container\">\n          <img alt=\"Twitter Logo\" className=\"twitter-logo\" src={twitterLogo} />\n          <a\n            className=\"footer-text\"\n            href={TWITTER_LINK}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >{`built with @${TWITTER_HANDLE}`}</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}